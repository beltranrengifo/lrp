exports.messages = {
  clean: {
    command: 'clean',
    description: 'Clean Liferay Portal repository',
    start: 'Starting repository clean up...',
    end: 'Liferay Portal repository is now clean!',
  },
  'restore-sql': {
    command: 'restore-sql',
    description: 'Initialize and restore Liferay Portal MySQL database',
    start: 'Initializing MySQL database...',
    end: 'Portal MySQL Database restored!',
    error: 'Oops, there is a problem around... Please try again!',
  },
  start: {
    command: 'start',
    description: 'Start Liferay Portal server',
    start: 'Starting up the Liferay Portal...',
    end: 'Liferay Portal is shut!',
  },
  stop: {
    command: 'stop',
    description: 'Stop Liferay Portal server',
    start: 'Stopping Liferay Portal server process...',
    end: 'Liferay Portal server process is now stopped!',
  },
  deploy: {
    command: 'deploy [option]',
    description: 'Update the module you are working on...',
    helpText: 'Rememeber to execute this command in the module folder',
    start: 'Deploying module...',
    end: 'Module deployed! Wait to see STARTED in your Tomcat console and refresh the page.',
    error: 'Module not deployed!',
    fast: 'Initializing fast module deployment',
    full: 'Initializing full module deployment',
    watch: 'Initializing fast module deployment and watch for changes',
    super: 'Initializing super module deployment',
    '-a': '-a',
    'option-a': 'Generate a fast deploy',
    '-w': '-w',
    'option-w': 'Generate a fast deploy and watch for changes',
    '-s': '-s',
    'option-s': 'Generate a super deploy for all changed modules',
  },
  build: {
    command: 'build',
    description: 'Build all portal modules usign Ant',
    start: 'Building modules...',
    end: 'Build successful',
  },
  format: {
    command: 'format',
    description: 'Format module source code using Liferay standards',
    helpText: 'Rememeber to execute this command in the module folder',
    start: 'Formatting source code...',
    end: 'Formattting finished!',
  },
  'update-repo': {
    command: 'update-repo',
    description: 'Update local Portal repository with remote master branch',
    start: 'Updating repository...',
    end: 'Repository updated!',
  },
  pr: {
    command: 'pr [action] [repository] [pull]',
    description: 'Get and send pull request through Github CLI',
    getOption: 'Getting pull request from Github...',
    postOption: 'Creating pull request in Github repository...',
    missingRepoName: 'Please provide a repository name',
    missingPrId: 'Please provide a pull request id',
    end: 'Pull request executed!',
    missingAction: 'Please provide an action: "get" or "post"',
    unknownAction: 'Please provide a valid action: "get" or "post"',
    error: 'Oops, there is a problem around... Please try again!',
    getSuccess: 'Pull request retrieved successfully!',
    postSuccess: 'Pull request created successfully!',
  },
  morning: {
    command: 'morning',
    description: 'The daily rutine',
    start: 'Starting daily rutine...',
    end: 'Daily rutine finished, have a good day!',
  },
}
